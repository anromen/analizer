[{"C:\\Users\\miggr\\development\\analizer\\src\\App.js":"1","C:\\Users\\miggr\\development\\analizer\\src\\index.js":"2"},{"size":8369,"mtime":1606440364143,"results":"3","hashOfConfig":"4"},{"size":219,"mtime":1606353948195,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1pbzk8",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\miggr\\development\\analizer\\src\\App.js",["11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39"],"import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst Code = ({ text, setText }) => {\n  return (\n    <div style={{ padding: \"16px\", display: \"flex\" }}>\n      <input className=\"code-input\" value={text} onChange={setText} />\n    </div>\n  );\n};\n\nconst Token = ({ value, definition }) => {\n  return (\n    <div className=\"token\">\n      <span className=\"token-symbol\">{value}</span>\n      <span className=\"token-description\">{definition}</span>\n    </div>\n  );\n};\n\nconst Tokens = ({ items }) => {\n  return (\n    <div className=\"code-tokens\">\n      {items.map((item) => (\n        <Token value={item.token} definition={item.definition} />\n      ))}\n    </div>\n  );\n};\n\nfunction App() {\n  const RESERVED = [\n    { reg: /continue/, value: \"continue\" },\n    { reg: /abstract/, value: \"abstract\" },\n    { reg: /assert/, value: \"assert\" },\n    { reg: /break/, value: \"break\" },\n    { reg: /class/, value: \"class\" },\n    { reg: /const/, value: \"const\" },\n    { reg: /default/, value: \"default\" },\n    { reg: /enum/, value: \"enum\" },\n    { reg: /extends/, value: \"extends\" },\n    { reg: /final/, value: \"final\" },\n    { reg: /finally/, value: \"finally\" },\n    { reg: /implements/, value: \"implements\" },\n    { reg: /import/, value: \"import\" },\n    { reg: /instanceof/, value: \"instanceof\" },\n    { reg: /interface/, value: \"interface\" },\n    { reg: /native/, value: \"native\" },\n    { reg: /new/, value: \"new\" },\n    { reg: /package/, value: \"package\" },\n    { reg: /private/, value: \"private\" },\n    { reg: /protected/, value: \"protected\" },\n    { reg: /public/, value: \"public\" },\n    { reg: /return/, value: \"return\" },\n    { reg: /static/, value: \"static\" },\n    { reg: /strictfp/, value: \"strictfp\" },\n    { reg: /super/, value: \"super\" },\n    { reg: /switch/, value: \"switch\" },\n    { reg: /synchronized/, value: \"synchronized\" },\n    { reg: /this/, value: \"this\" },\n    { reg: /throw/, value: \"throw\" },\n    { reg: /throws/, value: \"throws\" },\n    { reg: /transient/, value: \"transient\" },\n    { reg: /try/, value: \"try\" },\n    { reg: /void/, value: \"void\" },\n    { reg: /volatile/, value: \"volatile\" },\n  ];\n  const BOOLEAN_OPERATORS = [\n    { reg: /true/, value: \"true\" },\n    { reg: /false/, value: \"false\" },\n  ];\n  const CONTROL_STRUCTURES = [\n    { reg: /do/, value: \"do\" },\n    { reg: /else/, value: \"else\" },\n    { reg: /for/, value: \"for\" },\n    { reg: /if/, value: \"if\" },\n    { reg: /try/, value: \"try\" },\n    { reg: /while/, value: \"while\" },\n    { reg: /catch/, value: \"catch\" },\n    { reg: /goto/, value: \"goto\" },\n  ];\n  const DATA_TYPE = [\n    { reg: /int/, value: \"int\" },\n    { reg: /boolean/, value: \"boolean\" },\n    { reg: /char/, value: \"char\" },\n    { reg: /long/, value: \"long\" },\n    { reg: /short/, value: \"short\" },\n    { reg: /byte/, value: \"byte\" },\n    { reg: /double/, value: \"double\" },\n    { reg: /float/, value: \"float\" },\n  ];\n  const ARITHMETIC_OPERATORS = [\n    { reg: /\\+/, value: \"+\" },\n    { reg: /\\-/, value: \"-\" },\n    { reg: /\\*/, value: \"*\" },\n    { reg: /\\//, value: \"/\" },\n    { reg: /\\%/, value: \"%\" },\n  ];\n  const ASSIGNATION_OPERATORS = [\n    { reg: /\\=/, value: \"=\" },\n    { reg: /\\+\\=/, value: \"+=\" },\n    { reg: /\\-\\=/, value: \"-=\" },\n    { reg: /\\*\\=/, value: \"*=\" },\n    { reg: /\\%\\=/, value: \"%*\" },\n  ];\n  const RELATIONAL_OPERATORS = [\n    { reg: /\\=\\=/, value: \"==\" },\n    { reg: /\\!\\=/, value: \"!=\" },\n    { reg: /\\>/, value: \">\" },\n    { reg: /\\</, value: \"<\" },\n    { reg: /\\>\\=/, value: \">=\" },\n    { reg: /\\<\\=/, value: \"<=\" },\n  ];\n  const SPECIAL_OPERATORS = [\n    { reg: /\\+\\+/, value: \"++\" },\n    { reg: /\\-\\-/, value: \"--\" },\n    { reg: /\\./, value: \".\" },\n    { reg: /\\;/, value: \";\" },\n  ];\n  const GROUP_OPERATORS = [\n    { reg: /\\(/, value: \"(\" },\n    { reg: /\\)/, value: \")\" },\n    { reg: /\\{/, value: \"{\" },\n    { reg: /\\}/, value: \"}\" },\n    { reg: /\\[/, value: \"[\" },\n    { reg: /\\]/, value: \"]\" },\n  ];\n  const LOGIC_OPERATORS = [\n    { reg: /\\&/, value: \"&\" },\n    { reg: /\\^/, value: \"^\" },\n    { reg: /\\|/, value: \"|\" },\n    { reg: /\\&\\&/, value: \"&&\" },\n    { reg: /\\|\\|/, value: \"||\" },\n    { reg: /\\?/, value: \"?\" },\n    { reg: /\\:/, value: \":\" },\n  ];\n  const STRING_OPERATORS = [\n    { reg: /\\'/, value: \"'\" },\n    { reg: /\\\"/, value: '\"' },\n  ];\n  const COMMENTARY_OPERATORS = [\n    { reg: /\\/\\*/, value: \"//\" },\n    { reg: /\\*\\//, value: \"*/\" },\n    { reg: /\\/\\//, value: \"//\" },\n  ];\n\n  const [text, setText] = useState(\"\");\n  const [tokens, setTokens] = useState([]);\n\n  const search = ({ text, tokens, array, definition }) => {\n    //TODO: mapear operadores de comentario y reemplazarlos por un string vacío, al tiempo que si se encuentra coincidencia agregue item a array\n    let items = [];\n    let str = text;\n\n    array.map((operator) => {\n      const regex = new RegExp(operator.reg, \"g\");\n      const isMatch = regex.test(text);\n      str = str.replaceAll(regex, \"\");\n\n      if (isMatch) {\n        items = [...items, { token: operator.value, definition }];\n      }\n    });\n\n    return {\n      text: str,\n      tokens: [...tokens, ...items],\n    };\n  };\n\n  const searchReserved = ({ text, tokens }) => {\n    return search({\n      text,\n      tokens,\n      array: RESERVED,\n      definition: \"Palabra reservada por el lenguaje.\",\n    });\n  };\n  const searchBoolean = ({ text, tokens }) => {\n    return search({\n      text,\n      tokens,\n      array: BOOLEAN_OPERATORS,\n      definition: \"Valor booleano.\",\n    });\n  };\n  const searchControlStructures = ({ text, tokens }) => {\n    return search({\n      text,\n      tokens,\n      array: CONTROL_STRUCTURES,\n      definition: \"Estructura de control\",\n    });\n  };\n  const searchDataType = ({ text, tokens }) => {\n    return search({\n      text,\n      tokens,\n      array: DATA_TYPE,\n      definition: \"Tipo de dato\",\n    });\n  };\n  const searchArithmetic = ({ text, tokens }) => {\n    return search({\n      text,\n      tokens,\n      array: ARITHMETIC_OPERATORS,\n      definition: \"Operador aritmético\",\n    });\n  };\n  const searchAssignation = ({ text, tokens }) => {\n    return search({\n      text,\n      tokens,\n      array: ASSIGNATION_OPERATORS,\n      definition: \"Operador de asignación\",\n    });\n  };\n  const searchRelational = ({ text, tokens }) => {\n    return search({\n      text,\n      tokens,\n      array: RELATIONAL_OPERATORS,\n      definition: \"Operador relacional o de comparación\",\n    });\n  };\n  const searchSpecial = ({ text, tokens }) => {\n    return search({\n      text,\n      tokens,\n      array: SPECIAL_OPERATORS,\n      definition: \"Operador especial\",\n    });\n  };\n  const searchGroup = ({ text, tokens }) => {\n    return search({\n      text,\n      tokens,\n      array: GROUP_OPERATORS,\n      definition: \"Símbolo de agrupación\",\n    });\n  };\n  const searchLogic = ({ text, tokens }) => {\n    return search({\n      text,\n      tokens,\n      array: LOGIC_OPERATORS,\n      definition: \"Operador lógico\",\n    });\n  };\n  const searchString = ({ text, tokens }) => {\n    return search({\n      text,\n      tokens,\n      array: STRING_OPERATORS,\n      definition: \"Operador para poder ingresar Strings en el programa.\",\n    });\n  };\n  const searchCommentary = ({ text, tokens }) => {\n    return search({\n      text,\n      tokens: [],\n      array: COMMENTARY_OPERATORS,\n      definition: \"Simbolo para poder realizar comentarios en el programa.\",\n    });\n  };\n\n  const onClick = () => {\n    setTokens(\n      searchReserved(\n        searchBoolean(\n          searchControlStructures(\n            searchDataType(\n              searchArithmetic(\n                searchAssignation(\n                  searchRelational(\n                    searchSpecial(\n                      searchGroup(\n                        searchLogic(\n                          searchString(searchCommentary({ text, tokens: [] }))\n                        )\n                      )\n                    )\n                  )\n                )\n              )\n            )\n          )\n        )\n      ).tokens\n    );\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"wrapper\">\n        <Code text={text} setText={(e) => setText(e.target.value)} />\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <button className=\"input-button\" onClick={onClick}>\n            Analizar\n          </button>\n        </div>\n        <Tokens items={tokens} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\miggr\\development\\analizer\\src\\index.js",[],{"ruleId":"40","severity":1,"message":"41","line":94,"column":13,"nodeType":"42","messageId":"43","endLine":94,"endColumn":14,"suggestions":"44"},{"ruleId":"40","severity":1,"message":"45","line":97,"column":13,"nodeType":"42","messageId":"43","endLine":97,"endColumn":14,"suggestions":"46"},{"ruleId":"40","severity":1,"message":"47","line":100,"column":13,"nodeType":"42","messageId":"43","endLine":100,"endColumn":14,"suggestions":"48"},{"ruleId":"40","severity":1,"message":"47","line":101,"column":15,"nodeType":"42","messageId":"43","endLine":101,"endColumn":16,"suggestions":"49"},{"ruleId":"40","severity":1,"message":"41","line":102,"column":13,"nodeType":"42","messageId":"43","endLine":102,"endColumn":14,"suggestions":"50"},{"ruleId":"40","severity":1,"message":"47","line":102,"column":15,"nodeType":"42","messageId":"43","endLine":102,"endColumn":16,"suggestions":"51"},{"ruleId":"40","severity":1,"message":"47","line":103,"column":15,"nodeType":"42","messageId":"43","endLine":103,"endColumn":16,"suggestions":"52"},{"ruleId":"40","severity":1,"message":"45","line":104,"column":13,"nodeType":"42","messageId":"43","endLine":104,"endColumn":14,"suggestions":"53"},{"ruleId":"40","severity":1,"message":"47","line":104,"column":15,"nodeType":"42","messageId":"43","endLine":104,"endColumn":16,"suggestions":"54"},{"ruleId":"40","severity":1,"message":"47","line":107,"column":13,"nodeType":"42","messageId":"43","endLine":107,"endColumn":14,"suggestions":"55"},{"ruleId":"40","severity":1,"message":"47","line":107,"column":15,"nodeType":"42","messageId":"43","endLine":107,"endColumn":16,"suggestions":"56"},{"ruleId":"40","severity":1,"message":"57","line":108,"column":13,"nodeType":"42","messageId":"43","endLine":108,"endColumn":14,"suggestions":"58"},{"ruleId":"40","severity":1,"message":"47","line":108,"column":15,"nodeType":"42","messageId":"43","endLine":108,"endColumn":16,"suggestions":"59"},{"ruleId":"40","severity":1,"message":"60","line":109,"column":13,"nodeType":"42","messageId":"43","endLine":109,"endColumn":14,"suggestions":"61"},{"ruleId":"40","severity":1,"message":"62","line":110,"column":13,"nodeType":"42","messageId":"43","endLine":110,"endColumn":14,"suggestions":"63"},{"ruleId":"40","severity":1,"message":"60","line":111,"column":13,"nodeType":"42","messageId":"43","endLine":111,"endColumn":14,"suggestions":"64"},{"ruleId":"40","severity":1,"message":"47","line":111,"column":15,"nodeType":"42","messageId":"43","endLine":111,"endColumn":16,"suggestions":"65"},{"ruleId":"40","severity":1,"message":"62","line":112,"column":13,"nodeType":"42","messageId":"43","endLine":112,"endColumn":14,"suggestions":"66"},{"ruleId":"40","severity":1,"message":"47","line":112,"column":15,"nodeType":"42","messageId":"43","endLine":112,"endColumn":16,"suggestions":"67"},{"ruleId":"40","severity":1,"message":"41","line":116,"column":13,"nodeType":"42","messageId":"43","endLine":116,"endColumn":14,"suggestions":"68"},{"ruleId":"40","severity":1,"message":"41","line":116,"column":15,"nodeType":"42","messageId":"43","endLine":116,"endColumn":16,"suggestions":"69"},{"ruleId":"40","severity":1,"message":"70","line":118,"column":13,"nodeType":"42","messageId":"43","endLine":118,"endColumn":14,"suggestions":"71"},{"ruleId":"40","severity":1,"message":"72","line":129,"column":13,"nodeType":"42","messageId":"43","endLine":129,"endColumn":14,"suggestions":"73"},{"ruleId":"40","severity":1,"message":"72","line":132,"column":13,"nodeType":"42","messageId":"43","endLine":132,"endColumn":14,"suggestions":"74"},{"ruleId":"40","severity":1,"message":"72","line":132,"column":15,"nodeType":"42","messageId":"43","endLine":132,"endColumn":16,"suggestions":"75"},{"ruleId":"40","severity":1,"message":"76","line":135,"column":13,"nodeType":"42","messageId":"43","endLine":135,"endColumn":14,"suggestions":"77"},{"ruleId":"40","severity":1,"message":"78","line":138,"column":13,"nodeType":"42","messageId":"43","endLine":138,"endColumn":14,"suggestions":"79"},{"ruleId":"40","severity":1,"message":"80","line":139,"column":13,"nodeType":"42","messageId":"43","endLine":139,"endColumn":14,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":155,"column":26,"nodeType":"84","messageId":"85","endLine":155,"endColumn":28},"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["86","87"],"Unnecessary escape character: \\%.",["88","89"],"Unnecessary escape character: \\=.",["90","91"],["92","93"],["94","95"],["96","97"],["98","99"],["100","101"],["102","103"],["104","105"],["106","107"],"Unnecessary escape character: \\!.",["108","109"],["110","111"],"Unnecessary escape character: \\>.",["112","113"],"Unnecessary escape character: \\<.",["114","115"],["116","117"],["118","119"],["120","121"],["122","123"],["124","125"],["126","127"],"Unnecessary escape character: \\;.",["128","129"],"Unnecessary escape character: \\&.",["130","131"],["132","133"],["134","135"],"Unnecessary escape character: \\:.",["136","137"],"Unnecessary escape character: \\'.",["138","139"],"Unnecessary escape character: \\\".",["140","141"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"messageId":"142","fix":"143","desc":"144"},{"messageId":"145","fix":"146","desc":"147"},{"messageId":"142","fix":"148","desc":"144"},{"messageId":"145","fix":"149","desc":"147"},{"messageId":"142","fix":"150","desc":"144"},{"messageId":"145","fix":"151","desc":"147"},{"messageId":"142","fix":"152","desc":"144"},{"messageId":"145","fix":"153","desc":"147"},{"messageId":"142","fix":"154","desc":"144"},{"messageId":"145","fix":"155","desc":"147"},{"messageId":"142","fix":"156","desc":"144"},{"messageId":"145","fix":"157","desc":"147"},{"messageId":"142","fix":"158","desc":"144"},{"messageId":"145","fix":"159","desc":"147"},{"messageId":"142","fix":"160","desc":"144"},{"messageId":"145","fix":"161","desc":"147"},{"messageId":"142","fix":"162","desc":"144"},{"messageId":"145","fix":"163","desc":"147"},{"messageId":"142","fix":"164","desc":"144"},{"messageId":"145","fix":"165","desc":"147"},{"messageId":"142","fix":"166","desc":"144"},{"messageId":"145","fix":"167","desc":"147"},{"messageId":"142","fix":"168","desc":"144"},{"messageId":"145","fix":"169","desc":"147"},{"messageId":"142","fix":"170","desc":"144"},{"messageId":"145","fix":"171","desc":"147"},{"messageId":"142","fix":"172","desc":"144"},{"messageId":"145","fix":"173","desc":"147"},{"messageId":"142","fix":"174","desc":"144"},{"messageId":"145","fix":"175","desc":"147"},{"messageId":"142","fix":"176","desc":"144"},{"messageId":"145","fix":"177","desc":"147"},{"messageId":"142","fix":"178","desc":"144"},{"messageId":"145","fix":"179","desc":"147"},{"messageId":"142","fix":"180","desc":"144"},{"messageId":"145","fix":"181","desc":"147"},{"messageId":"142","fix":"182","desc":"144"},{"messageId":"145","fix":"183","desc":"147"},{"messageId":"142","fix":"184","desc":"144"},{"messageId":"145","fix":"185","desc":"147"},{"messageId":"142","fix":"186","desc":"144"},{"messageId":"145","fix":"187","desc":"147"},{"messageId":"142","fix":"188","desc":"144"},{"messageId":"145","fix":"189","desc":"147"},{"messageId":"142","fix":"190","desc":"144"},{"messageId":"145","fix":"191","desc":"147"},{"messageId":"142","fix":"192","desc":"144"},{"messageId":"145","fix":"193","desc":"147"},{"messageId":"142","fix":"194","desc":"144"},{"messageId":"145","fix":"195","desc":"147"},{"messageId":"142","fix":"196","desc":"144"},{"messageId":"145","fix":"197","desc":"147"},{"messageId":"142","fix":"198","desc":"144"},{"messageId":"145","fix":"199","desc":"147"},{"messageId":"142","fix":"200","desc":"144"},{"messageId":"145","fix":"201","desc":"147"},"removeEscape",{"range":"202","text":"203"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"204","text":"205"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"206","text":"203"},{"range":"207","text":"205"},{"range":"208","text":"203"},{"range":"209","text":"205"},{"range":"210","text":"203"},{"range":"211","text":"205"},{"range":"212","text":"203"},{"range":"213","text":"205"},{"range":"214","text":"203"},{"range":"215","text":"205"},{"range":"216","text":"203"},{"range":"217","text":"205"},{"range":"218","text":"203"},{"range":"219","text":"205"},{"range":"220","text":"203"},{"range":"221","text":"205"},{"range":"222","text":"203"},{"range":"223","text":"205"},{"range":"224","text":"203"},{"range":"225","text":"205"},{"range":"226","text":"203"},{"range":"227","text":"205"},{"range":"228","text":"203"},{"range":"229","text":"205"},{"range":"230","text":"203"},{"range":"231","text":"205"},{"range":"232","text":"203"},{"range":"233","text":"205"},{"range":"234","text":"203"},{"range":"235","text":"205"},{"range":"236","text":"203"},{"range":"237","text":"205"},{"range":"238","text":"203"},{"range":"239","text":"205"},{"range":"240","text":"203"},{"range":"241","text":"205"},{"range":"242","text":"203"},{"range":"243","text":"205"},{"range":"244","text":"203"},{"range":"245","text":"205"},{"range":"246","text":"203"},{"range":"247","text":"205"},{"range":"248","text":"203"},{"range":"249","text":"205"},{"range":"250","text":"203"},{"range":"251","text":"205"},{"range":"252","text":"203"},{"range":"253","text":"205"},{"range":"254","text":"203"},{"range":"255","text":"205"},{"range":"256","text":"203"},{"range":"257","text":"205"},{"range":"258","text":"203"},{"range":"259","text":"205"},[2942,2943],"",[2942,2942],"\\",[3035,3036],[3035,3035],[3105,3106],[3105,3105],[3138,3139],[3138,3138],[3170,3171],[3170,3170],[3172,3173],[3172,3172],[3206,3207],[3206,3206],[3238,3239],[3238,3238],[3240,3241],[3240,3240],[3310,3311],[3310,3310],[3312,3313],[3312,3312],[3344,3345],[3344,3344],[3346,3347],[3346,3346],[3378,3379],[3378,3378],[3409,3410],[3409,3409],[3440,3441],[3440,3440],[3442,3443],[3442,3442],[3474,3475],[3474,3474],[3476,3477],[3476,3476],[3577,3578],[3577,3577],[3579,3580],[3579,3579],[3642,3643],[3642,3642],[3925,3926],[3925,3925],[4018,4019],[4018,4018],[4020,4021],[4020,4020],[4117,4118],[4117,4117],[4182,4183],[4182,4182],[4213,4214],[4213,4213]]